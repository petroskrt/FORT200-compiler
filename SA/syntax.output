Grammar

    0 $accept: program "EOF"

    1 program: body "end" subprograms

    2 body: declarations statements

    3 declarations: declarations type vars
    4             | declarations "record" fields "endrec" vars
    5             | declarations "data" vals
    6             | ε

    7 type: "int"
    8     | "real"
    9     | "logical"
   10     | "char"
   11     | "complex"

   12 vars: vars "," undef_variable
   13     | undef_variable

   14 undef_variable: "list" undef_variable
   15               | "id" "(" dims ")"
   16               | "id"

   17 dims: dims "," dim
   18     | dim

   19 dim: "int const"
   20    | "id"

   21 fields: fields field
   22       | field

   23 field: type vars
   24      | "record" fields "endrec" vars

   25 vals: vals "," "id" value_list
   26     | "id" value_list

   27 value_list: "/" values "/"

   28 values: values "," value
   29       | value

   30 value: sign constant
   31      | "string const"

   32 sign: "+ or -"
   33     | ε

   34 constant: simple_constant
   35         | complex_constant

   36 simple_constant: "int const"
   37                | "real const"
   38                | "logical const"
   39                | "char const"

   40 complex_constant: "(" "real const" ":" sign "real const" ")"

   41 statements: statements labeled_statement
   42           | labeled_statement

   43 labeled_statement: label statement
   44                  | statement

   45 label: "int const"

   46 statement: simple_statement
   47          | compound_statement

   48 simple_statement: assignment
   49                 | goto_statement
   50                 | if_statement
   51                 | subroutine_call
   52                 | io_statement
   53                 | "continue"
   54                 | "return"
   55                 | "stop"

   56 assignment: variable "=" expression
   57           | variable "=" "string const"

   58 variable: variable "." "id"
   59         | variable "(" expressions ")"
   60         | "listfunc" "(" expression ")"
   61         | "id"

   62 expressions: expressions "," expression
   63            | expression

   64 expression: expression ".OR." expression
   65           | expression ".AND." expression
   66           | expression ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression "+ or -" expression
   68           | expression "*" expression
   69           | expression "/" expression
   70           | expression "**" expression
   71           | ".NOT." expression
   72           | "+ or -" expression
   73           | variable
   74           | simple_constant
   75           | "length" "(" expression ")"
   76           | "new" "(" expression ")"
   77           | "(" expression ")"
   78           | "(" expression ":" expression ")"
   79           | listexpression

   80 $@1: ε

   81 listexpression: "[" expressions "]" $@1

   82 $@2: ε

   83 listexpression: "[" "]" $@2

   84 goto_statement: "goto" label
   85               | "goto" "id" "," "(" labels ")"

   86 labels: labels "," label
   87       | label

   88 if_statement: "if" "(" expression ")" label "," label "," label
   89             | "if" "(" expression ")" simple_statement

   90 subroutine_call: "call" variable

   91 io_statement: "read" read_list
   92             | "write" write_list

   93 read_list: read_list "," read_item
   94          | read_item

   95 read_item: variable
   96          | "(" read_list "," "id" "=" iter_space ")"

   97 iter_space: expression "," expression step

   98 step: "," expression
   99     | ε

  100 write_list: write_list "," write_item
  101           | write_item

  102 write_item: expression
  103           | "(" write_list "," "id" "=" iter_space ")"
  104           | "string const"

  105 compound_statement: branch_statement
  106                   | loop_statement

  107 branch_statement: "if" "(" expression ")" "then" body tail

  108 tail: "else" body "endif"
  109     | "endif"

  110 $@3: ε

  111 loop_statement: "do" "id" "=" iter_space body "enddo" $@3

  112 subprograms: subprograms subprogram
  113            | ε

  114 subprogram: header body "end"

  115 header: type "function" "id" "(" formal_parameters ")"
  116       | "list" "function" "id" "(" formal_parameters ")"
  117       | "subroutine" "id" "(" formal_parameters ")"
  118       | "subroutine" "id"

  119 $@4: ε

  120 header: "list" error "id" "(" formal_parameters ")" $@4

  121 $@5: ε

  122 header: error "function" "id" "(" formal_parameters ")" $@5
  123       | "list" "function" error "(" formal_parameters ")"

  124 $@6: ε

  125 header: "list" "function" "id" error formal_parameters ")" $@6

  126 formal_parameters: type vars "," formal_parameters
  127                  | type vars


Terminals, with rules where they appear

    "EOF" <strval> (0) 0
    error (256) 120 122 123 125
    "function" <strval> (258) 115 116 122 123 125
    "subroutine" <strval> (259) 117 118
    "end" <strval> (260) 1 114
    "int" <strval> (261) 7
    "real" <strval> (262) 8
    "logical" <strval> (263) 9
    "char" <strval> (264) 10
    "complex" <strval> (265) 11
    "record" <strval> (266) 4 24
    "endrec" <strval> (267) 4 24
    "list" <strval> (268) 14 116 120 123 125
    "data" <strval> (269) 5
    "continue" <strval> (270) 53
    "goto" <strval> (271) 84 85
    "call" <strval> (272) 90
    "read" <strval> (273) 91
    "write" <strval> (274) 92
    "new" <strval> (275) 76
    "length" <strval> (276) 75
    "if" <strval> (277) 88 89 107
    "then" <strval> (278) 107
    "else" <strval> (279) 108
    "endif" <strval> (280) 108 109
    "do" <strval> (281) 111
    "enddo" <strval> (282) 111
    "stop" <strval> (283) 55
    "return" <strval> (284) 54
    "id" <strval> (285) 15 16 20 25 26 58 61 85 96 103 111 115 116 117 118 120 122 125
    "int const" <intval> (286) 19 36 45
    "real const" <floatval> (287) 37 40
    "char const" <strval> (288) 39
    "logical const" <boolval> (289) 38
    "string const" <strval> (290) 31 57 104
    ".OR." <strval> (291) 64
    ".AND." <strval> (292) 65
    ".NOT." <strval> (293) 71
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." <strval> (294) 66
    "+ or -" <strval> (295) 32 67 72
    "*" <strval> (296) 68
    "/" <strval> (297) 27 69
    "**" <strval> (298) 70
    "listfunc" <strval> (299) 60
    "(" <strval> (300) 15 40 59 60 75 76 77 78 85 88 89 96 103 107 115 116 117 120 122 123
    ")" <strval> (301) 15 40 59 60 75 76 77 78 85 88 89 96 103 107 115 116 117 120 122 123 125
    "," <strval> (302) 12 17 25 28 62 85 86 88 93 96 97 98 100 103 126
    "=" <strval> (303) 56 57 96 103 111
    "." <strval> (304) 58
    ":" <strval> (305) 40 78
    "[" <strval> (306) 81 83
    "]" <strval> (307) 81 83


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1
        on right: 0
    body (55)
        on left: 2
        on right: 1 107 108 111 114
    declarations (56)
        on left: 3 4 5 6
        on right: 2 3 4 5
    type (57)
        on left: 7 8 9 10 11
        on right: 3 23 115 126 127
    vars (58)
        on left: 12 13
        on right: 3 4 12 23 24 126 127
    undef_variable (59)
        on left: 14 15 16
        on right: 12 13 14
    dims (60)
        on left: 17 18
        on right: 15 17
    dim (61)
        on left: 19 20
        on right: 17 18
    fields (62)
        on left: 21 22
        on right: 4 21 24
    field (63)
        on left: 23 24
        on right: 21 22
    vals (64)
        on left: 25 26
        on right: 5 25
    value_list (65)
        on left: 27
        on right: 25 26
    values (66)
        on left: 28 29
        on right: 27 28
    value (67)
        on left: 30 31
        on right: 28 29
    sign (68)
        on left: 32 33
        on right: 30 40
    constant (69)
        on left: 34 35
        on right: 30
    simple_constant (70)
        on left: 36 37 38 39
        on right: 34 74
    complex_constant (71)
        on left: 40
        on right: 35
    statements (72)
        on left: 41 42
        on right: 2 41
    labeled_statement (73)
        on left: 43 44
        on right: 41 42
    label (74)
        on left: 45
        on right: 43 84 86 87 88
    statement (75)
        on left: 46 47
        on right: 43 44
    simple_statement (76)
        on left: 48 49 50 51 52 53 54 55
        on right: 46 89
    assignment (77)
        on left: 56 57
        on right: 48
    variable (78)
        on left: 58 59 60 61
        on right: 56 57 58 59 73 90 95
    expressions (79)
        on left: 62 63
        on right: 59 62 81
    expression (80)
        on left: 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
        on right: 56 60 62 63 64 65 66 67 68 69 70 71 72 75 76 77 78 88 89 97 98 102 107
    listexpression (81)
        on left: 81 83
        on right: 79
    $@1 (82)
        on left: 80
        on right: 81
    $@2 (83)
        on left: 82
        on right: 83
    goto_statement (84)
        on left: 84 85
        on right: 49
    labels (85)
        on left: 86 87
        on right: 85 86
    if_statement (86)
        on left: 88 89
        on right: 50
    subroutine_call (87)
        on left: 90
        on right: 51
    io_statement (88)
        on left: 91 92
        on right: 52
    read_list (89)
        on left: 93 94
        on right: 91 93 96
    read_item (90)
        on left: 95 96
        on right: 93 94
    iter_space (91)
        on left: 97
        on right: 96 103 111
    step (92)
        on left: 98 99
        on right: 97
    write_list (93)
        on left: 100 101
        on right: 92 100 103
    write_item (94)
        on left: 102 103 104
        on right: 100 101
    compound_statement (95)
        on left: 105 106
        on right: 47
    branch_statement (96)
        on left: 107
        on right: 105
    tail (97)
        on left: 108 109
        on right: 107
    loop_statement (98)
        on left: 111
        on right: 106
    $@3 (99)
        on left: 110
        on right: 111
    subprograms (100)
        on left: 112 113
        on right: 1 112
    subprogram (101)
        on left: 114
        on right: 112
    header (102)
        on left: 115 116 117 118 120 122 123 125
        on right: 114
    $@4 (103)
        on left: 119
        on right: 120
    $@5 (104)
        on left: 121
        on right: 122
    $@6 (105)
        on left: 124
        on right: 125
    formal_parameters (106)
        on left: 126 127
        on right: 115 116 117 120 122 123 125 126


State 0

    0 $accept: • program "EOF"

    $default  reduce using rule 6 (declarations)

    program       go to state 1
    body          go to state 2
    declarations  go to state 3


State 1

    0 $accept: program • "EOF"

    "EOF"  shift, and go to state 4


State 2

    1 program: body • "end" subprograms

    "end"  shift, and go to state 5


State 3

    2 body: declarations • statements
    3 declarations: declarations • type vars
    4             | declarations • "record" fields "endrec" vars
    5             | declarations • "data" vals

    "int"        shift, and go to state 6
    "real"       shift, and go to state 7
    "logical"    shift, and go to state 8
    "char"       shift, and go to state 9
    "complex"    shift, and go to state 10
    "record"     shift, and go to state 11
    "data"       shift, and go to state 12
    "continue"   shift, and go to state 13
    "goto"       shift, and go to state 14
    "call"       shift, and go to state 15
    "read"       shift, and go to state 16
    "write"      shift, and go to state 17
    "if"         shift, and go to state 18
    "do"         shift, and go to state 19
    "stop"       shift, and go to state 20
    "return"     shift, and go to state 21
    "id"         shift, and go to state 22
    "int const"  shift, and go to state 23
    "listfunc"   shift, and go to state 24

    type                go to state 25
    statements          go to state 26
    labeled_statement   go to state 27
    label               go to state 28
    statement           go to state 29
    simple_statement    go to state 30
    assignment          go to state 31
    variable            go to state 32
    goto_statement      go to state 33
    if_statement        go to state 34
    subroutine_call     go to state 35
    io_statement        go to state 36
    compound_statement  go to state 37
    branch_statement    go to state 38
    loop_statement      go to state 39


State 4

    0 $accept: program "EOF" •

    $default  accept


State 5

    1 program: body "end" • subprograms

    $default  reduce using rule 113 (subprograms)

    subprograms  go to state 40


State 6

    7 type: "int" •

    $default  reduce using rule 7 (type)


State 7

    8 type: "real" •

    $default  reduce using rule 8 (type)


State 8

    9 type: "logical" •

    $default  reduce using rule 9 (type)


State 9

   10 type: "char" •

    $default  reduce using rule 10 (type)


State 10

   11 type: "complex" •

    $default  reduce using rule 11 (type)


State 11

    4 declarations: declarations "record" • fields "endrec" vars

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10
    "record"   shift, and go to state 41

    type    go to state 42
    fields  go to state 43
    field   go to state 44


State 12

    5 declarations: declarations "data" • vals

    "id"  shift, and go to state 45

    vals  go to state 46


State 13

   53 simple_statement: "continue" •

    $default  reduce using rule 53 (simple_statement)


State 14

   84 goto_statement: "goto" • label
   85               | "goto" • "id" "," "(" labels ")"

    "id"         shift, and go to state 47
    "int const"  shift, and go to state 23

    label  go to state 48


State 15

   90 subroutine_call: "call" • variable

    "id"        shift, and go to state 22
    "listfunc"  shift, and go to state 24

    variable  go to state 49


State 16

   91 io_statement: "read" • read_list

    "id"        shift, and go to state 22
    "listfunc"  shift, and go to state 24
    "("         shift, and go to state 50

    variable   go to state 51
    read_list  go to state 52
    read_item  go to state 53


State 17

   92 io_statement: "write" • write_list

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    "string const"   shift, and go to state 60
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 63
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 67
    listexpression   go to state 68
    write_list       go to state 69
    write_item       go to state 70


State 18

   88 if_statement: "if" • "(" expression ")" label "," label "," label
   89             | "if" • "(" expression ")" simple_statement
  107 branch_statement: "if" • "(" expression ")" "then" body tail

    "("  shift, and go to state 71


State 19

  111 loop_statement: "do" • "id" "=" iter_space body "enddo" $@3

    "id"  shift, and go to state 72


State 20

   55 simple_statement: "stop" •

    $default  reduce using rule 55 (simple_statement)


State 21

   54 simple_statement: "return" •

    $default  reduce using rule 54 (simple_statement)


State 22

   61 variable: "id" •

    $default  reduce using rule 61 (variable)


State 23

   45 label: "int const" •

    $default  reduce using rule 45 (label)


State 24

   60 variable: "listfunc" • "(" expression ")"

    "("  shift, and go to state 73


State 25

    3 declarations: declarations type • vars

    "list"  shift, and go to state 74
    "id"    shift, and go to state 75

    vars            go to state 76
    undef_variable  go to state 77


State 26

    2 body: declarations statements •
   41 statements: statements • labeled_statement

    "continue"   shift, and go to state 13
    "goto"       shift, and go to state 14
    "call"       shift, and go to state 15
    "read"       shift, and go to state 16
    "write"      shift, and go to state 17
    "if"         shift, and go to state 18
    "do"         shift, and go to state 19
    "stop"       shift, and go to state 20
    "return"     shift, and go to state 21
    "id"         shift, and go to state 22
    "int const"  shift, and go to state 23
    "listfunc"   shift, and go to state 24

    $default  reduce using rule 2 (body)

    labeled_statement   go to state 78
    label               go to state 28
    statement           go to state 29
    simple_statement    go to state 30
    assignment          go to state 31
    variable            go to state 32
    goto_statement      go to state 33
    if_statement        go to state 34
    subroutine_call     go to state 35
    io_statement        go to state 36
    compound_statement  go to state 37
    branch_statement    go to state 38
    loop_statement      go to state 39


State 27

   42 statements: labeled_statement •

    $default  reduce using rule 42 (statements)


State 28

   43 labeled_statement: label • statement

    "continue"  shift, and go to state 13
    "goto"      shift, and go to state 14
    "call"      shift, and go to state 15
    "read"      shift, and go to state 16
    "write"     shift, and go to state 17
    "if"        shift, and go to state 18
    "do"        shift, and go to state 19
    "stop"      shift, and go to state 20
    "return"    shift, and go to state 21
    "id"        shift, and go to state 22
    "listfunc"  shift, and go to state 24

    statement           go to state 79
    simple_statement    go to state 30
    assignment          go to state 31
    variable            go to state 32
    goto_statement      go to state 33
    if_statement        go to state 34
    subroutine_call     go to state 35
    io_statement        go to state 36
    compound_statement  go to state 37
    branch_statement    go to state 38
    loop_statement      go to state 39


State 29

   44 labeled_statement: statement •

    $default  reduce using rule 44 (labeled_statement)


State 30

   46 statement: simple_statement •

    $default  reduce using rule 46 (statement)


State 31

   48 simple_statement: assignment •

    $default  reduce using rule 48 (simple_statement)


State 32

   56 assignment: variable • "=" expression
   57           | variable • "=" "string const"
   58 variable: variable • "." "id"
   59         | variable • "(" expressions ")"

    "("  shift, and go to state 80
    "="  shift, and go to state 81
    "."  shift, and go to state 82


State 33

   49 simple_statement: goto_statement •

    $default  reduce using rule 49 (simple_statement)


State 34

   50 simple_statement: if_statement •

    $default  reduce using rule 50 (simple_statement)


State 35

   51 simple_statement: subroutine_call •

    $default  reduce using rule 51 (simple_statement)


State 36

   52 simple_statement: io_statement •

    $default  reduce using rule 52 (simple_statement)


State 37

   47 statement: compound_statement •

    $default  reduce using rule 47 (statement)


State 38

  105 compound_statement: branch_statement •

    $default  reduce using rule 105 (compound_statement)


State 39

  106 compound_statement: loop_statement •

    $default  reduce using rule 106 (compound_statement)


State 40

    1 program: body "end" subprograms •
  112 subprograms: subprograms • subprogram

    error         shift, and go to state 83
    "subroutine"  shift, and go to state 84
    "int"         shift, and go to state 6
    "real"        shift, and go to state 7
    "logical"     shift, and go to state 8
    "char"        shift, and go to state 9
    "complex"     shift, and go to state 10
    "list"        shift, and go to state 85

    "EOF"  reduce using rule 1 (program)

    type        go to state 86
    subprogram  go to state 87
    header      go to state 88


State 41

   24 field: "record" • fields "endrec" vars

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10
    "record"   shift, and go to state 41

    type    go to state 42
    fields  go to state 89
    field   go to state 44


State 42

   23 field: type • vars

    "list"  shift, and go to state 74
    "id"    shift, and go to state 75

    vars            go to state 90
    undef_variable  go to state 77


State 43

    4 declarations: declarations "record" fields • "endrec" vars
   21 fields: fields • field

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10
    "record"   shift, and go to state 41
    "endrec"   shift, and go to state 91

    type   go to state 42
    field  go to state 92


State 44

   22 fields: field •

    $default  reduce using rule 22 (fields)


State 45

   26 vals: "id" • value_list

    "/"  shift, and go to state 93

    value_list  go to state 94


State 46

    5 declarations: declarations "data" vals •
   25 vals: vals • "," "id" value_list

    ","  shift, and go to state 95

    $default  reduce using rule 5 (declarations)


State 47

   85 goto_statement: "goto" "id" • "," "(" labels ")"

    ","  shift, and go to state 96


State 48

   84 goto_statement: "goto" label •

    $default  reduce using rule 84 (goto_statement)


State 49

   58 variable: variable • "." "id"
   59         | variable • "(" expressions ")"
   90 subroutine_call: "call" variable •

    "("  shift, and go to state 80
    "."  shift, and go to state 82

    $default  reduce using rule 90 (subroutine_call)


State 50

   96 read_item: "(" • read_list "," "id" "=" iter_space ")"

    "id"        shift, and go to state 22
    "listfunc"  shift, and go to state 24
    "("         shift, and go to state 50

    variable   go to state 51
    read_list  go to state 97
    read_item  go to state 53


State 51

   58 variable: variable • "." "id"
   59         | variable • "(" expressions ")"
   95 read_item: variable •

    "("  shift, and go to state 80
    "."  shift, and go to state 82

    $default  reduce using rule 95 (read_item)


State 52

   91 io_statement: "read" read_list •
   93 read_list: read_list • "," read_item

    ","  shift, and go to state 98

    $default  reduce using rule 91 (io_statement)


State 53

   94 read_list: read_item •

    $default  reduce using rule 94 (read_list)


State 54

   76 expression: "new" • "(" expression ")"

    "("  shift, and go to state 99


State 55

   75 expression: "length" • "(" expression ")"

    "("  shift, and go to state 100


State 56

   36 simple_constant: "int const" •

    $default  reduce using rule 36 (simple_constant)


State 57

   37 simple_constant: "real const" •

    $default  reduce using rule 37 (simple_constant)


State 58

   39 simple_constant: "char const" •

    $default  reduce using rule 39 (simple_constant)


State 59

   38 simple_constant: "logical const" •

    $default  reduce using rule 38 (simple_constant)


State 60

  104 write_item: "string const" •

    $default  reduce using rule 104 (write_item)


State 61

   71 expression: ".NOT." • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 102
    listexpression   go to state 68


State 62

   72 expression: "+ or -" • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 103
    listexpression   go to state 68


State 63

   77 expression: "(" • expression ")"
   78           | "(" • expression ":" expression ")"
  103 write_item: "(" • write_list "," "id" "=" iter_space ")"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    "string const"   shift, and go to state 60
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 63
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 104
    listexpression   go to state 68
    write_list       go to state 105
    write_item       go to state 70


State 64

   81 listexpression: "[" • expressions "]" $@1
   83               | "[" • "]" $@2

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64
    "]"              shift, and go to state 106

    simple_constant  go to state 65
    variable         go to state 66
    expressions      go to state 107
    expression       go to state 108
    listexpression   go to state 68


State 65

   74 expression: simple_constant •

    $default  reduce using rule 74 (expression)


State 66

   58 variable: variable • "." "id"
   59         | variable • "(" expressions ")"
   73 expression: variable •

    "("  shift, and go to state 80
    "."  shift, and go to state 82

    $default  reduce using rule 73 (expression)


State 67

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
  102 write_item: expression •

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115

    $default  reduce using rule 102 (write_item)


State 68

   79 expression: listexpression •

    $default  reduce using rule 79 (expression)


State 69

   92 io_statement: "write" write_list •
  100 write_list: write_list • "," write_item

    ","  shift, and go to state 116

    $default  reduce using rule 92 (io_statement)


State 70

  101 write_list: write_item •

    $default  reduce using rule 101 (write_list)


State 71

   88 if_statement: "if" "(" • expression ")" label "," label "," label
   89             | "if" "(" • expression ")" simple_statement
  107 branch_statement: "if" "(" • expression ")" "then" body tail

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 117
    listexpression   go to state 68


State 72

  111 loop_statement: "do" "id" • "=" iter_space body "enddo" $@3

    "="  shift, and go to state 118


State 73

   60 variable: "listfunc" "(" • expression ")"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 119
    listexpression   go to state 68


State 74

   14 undef_variable: "list" • undef_variable

    "list"  shift, and go to state 74
    "id"    shift, and go to state 75

    undef_variable  go to state 120


State 75

   15 undef_variable: "id" • "(" dims ")"
   16               | "id" •

    "("  shift, and go to state 121

    $default  reduce using rule 16 (undef_variable)


State 76

    3 declarations: declarations type vars •
   12 vars: vars • "," undef_variable

    ","  shift, and go to state 122

    $default  reduce using rule 3 (declarations)


State 77

   13 vars: undef_variable •

    $default  reduce using rule 13 (vars)


State 78

   41 statements: statements labeled_statement •

    $default  reduce using rule 41 (statements)


State 79

   43 labeled_statement: label statement •

    $default  reduce using rule 43 (labeled_statement)


State 80

   59 variable: variable "(" • expressions ")"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expressions      go to state 123
    expression       go to state 108
    listexpression   go to state 68


State 81

   56 assignment: variable "=" • expression
   57           | variable "=" • "string const"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    "string const"   shift, and go to state 124
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 125
    listexpression   go to state 68


State 82

   58 variable: variable "." • "id"

    "id"  shift, and go to state 126


State 83

  122 header: error • "function" "id" "(" formal_parameters ")" $@5

    "function"  shift, and go to state 127


State 84

  117 header: "subroutine" • "id" "(" formal_parameters ")"
  118       | "subroutine" • "id"

    "id"  shift, and go to state 128


State 85

  116 header: "list" • "function" "id" "(" formal_parameters ")"
  120       | "list" • error "id" "(" formal_parameters ")" $@4
  123       | "list" • "function" error "(" formal_parameters ")"
  125       | "list" • "function" "id" error formal_parameters ")" $@6

    error       shift, and go to state 129
    "function"  shift, and go to state 130


State 86

  115 header: type • "function" "id" "(" formal_parameters ")"

    "function"  shift, and go to state 131


State 87

  112 subprograms: subprograms subprogram •

    $default  reduce using rule 112 (subprograms)


State 88

  114 subprogram: header • body "end"

    $default  reduce using rule 6 (declarations)

    body          go to state 132
    declarations  go to state 3


State 89

   21 fields: fields • field
   24 field: "record" fields • "endrec" vars

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10
    "record"   shift, and go to state 41
    "endrec"   shift, and go to state 133

    type   go to state 42
    field  go to state 92


State 90

   12 vars: vars • "," undef_variable
   23 field: type vars •

    ","  shift, and go to state 122

    $default  reduce using rule 23 (field)


State 91

    4 declarations: declarations "record" fields "endrec" • vars

    "list"  shift, and go to state 74
    "id"    shift, and go to state 75

    vars            go to state 134
    undef_variable  go to state 77


State 92

   21 fields: fields field •

    $default  reduce using rule 21 (fields)


State 93

   27 value_list: "/" • values "/"

    "string const"  shift, and go to state 135
    "+ or -"        shift, and go to state 136

    $default  reduce using rule 33 (sign)

    values  go to state 137
    value   go to state 138
    sign    go to state 139


State 94

   26 vals: "id" value_list •

    $default  reduce using rule 26 (vals)


State 95

   25 vals: vals "," • "id" value_list

    "id"  shift, and go to state 140


State 96

   85 goto_statement: "goto" "id" "," • "(" labels ")"

    "("  shift, and go to state 141


State 97

   93 read_list: read_list • "," read_item
   96 read_item: "(" read_list • "," "id" "=" iter_space ")"

    ","  shift, and go to state 142


State 98

   93 read_list: read_list "," • read_item

    "id"        shift, and go to state 22
    "listfunc"  shift, and go to state 24
    "("         shift, and go to state 50

    variable   go to state 51
    read_item  go to state 143


State 99

   76 expression: "new" "(" • expression ")"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 144
    listexpression   go to state 68


State 100

   75 expression: "length" "(" • expression ")"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 145
    listexpression   go to state 68


State 101

   77 expression: "(" • expression ")"
   78           | "(" • expression ":" expression ")"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 146
    listexpression   go to state 68


State 102

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   71           | ".NOT." expression •

    "**"  shift, and go to state 115

    $default  reduce using rule 71 (expression)


State 103

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   72           | "+ or -" expression •

    "*"   shift, and go to state 113
    "/"   shift, and go to state 114
    "**"  shift, and go to state 115

    $default  reduce using rule 72 (expression)


State 104

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   77           | "(" expression • ")"
   78           | "(" expression • ":" expression ")"
  102 write_item: expression •

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115
    ")"                                             shift, and go to state 147
    ":"                                             shift, and go to state 148

    $default  reduce using rule 102 (write_item)


State 105

  100 write_list: write_list • "," write_item
  103 write_item: "(" write_list • "," "id" "=" iter_space ")"

    ","  shift, and go to state 149


State 106

   83 listexpression: "[" "]" • $@2

    $default  reduce using rule 82 ($@2)

    $@2  go to state 150


State 107

   62 expressions: expressions • "," expression
   81 listexpression: "[" expressions • "]" $@1

    ","  shift, and go to state 151
    "]"  shift, and go to state 152


State 108

   63 expressions: expression •
   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115

    $default  reduce using rule 63 (expressions)


State 109

   64 expression: expression ".OR." • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 153
    listexpression   go to state 68


State 110

   65 expression: expression ".AND." • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 154
    listexpression   go to state 68


State 111

   66 expression: expression ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 155
    listexpression   go to state 68


State 112

   67 expression: expression "+ or -" • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 156
    listexpression   go to state 68


State 113

   68 expression: expression "*" • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 157
    listexpression   go to state 68


State 114

   69 expression: expression "/" • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 158
    listexpression   go to state 68


State 115

   70 expression: expression "**" • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 159
    listexpression   go to state 68


State 116

  100 write_list: write_list "," • write_item

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    "string const"   shift, and go to state 60
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 63
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 67
    listexpression   go to state 68
    write_item       go to state 160


State 117

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   88 if_statement: "if" "(" expression • ")" label "," label "," label
   89             | "if" "(" expression • ")" simple_statement
  107 branch_statement: "if" "(" expression • ")" "then" body tail

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115
    ")"                                             shift, and go to state 161


State 118

  111 loop_statement: "do" "id" "=" • iter_space body "enddo" $@3

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 162
    listexpression   go to state 68
    iter_space       go to state 163


State 119

   60 variable: "listfunc" "(" expression • ")"
   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115
    ")"                                             shift, and go to state 164


State 120

   14 undef_variable: "list" undef_variable •

    $default  reduce using rule 14 (undef_variable)


State 121

   15 undef_variable: "id" "(" • dims ")"

    "id"         shift, and go to state 165
    "int const"  shift, and go to state 166

    dims  go to state 167
    dim   go to state 168


State 122

   12 vars: vars "," • undef_variable

    "list"  shift, and go to state 74
    "id"    shift, and go to state 75

    undef_variable  go to state 169


State 123

   59 variable: variable "(" expressions • ")"
   62 expressions: expressions • "," expression

    ")"  shift, and go to state 170
    ","  shift, and go to state 151


State 124

   57 assignment: variable "=" "string const" •

    $default  reduce using rule 57 (assignment)


State 125

   56 assignment: variable "=" expression •
   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115

    $default  reduce using rule 56 (assignment)


State 126

   58 variable: variable "." "id" •

    $default  reduce using rule 58 (variable)


State 127

  122 header: error "function" • "id" "(" formal_parameters ")" $@5

    "id"  shift, and go to state 171


State 128

  117 header: "subroutine" "id" • "(" formal_parameters ")"
  118       | "subroutine" "id" •

    "("  shift, and go to state 172

    $default  reduce using rule 118 (header)


State 129

  120 header: "list" error • "id" "(" formal_parameters ")" $@4

    "id"  shift, and go to state 173


State 130

  116 header: "list" "function" • "id" "(" formal_parameters ")"
  123       | "list" "function" • error "(" formal_parameters ")"
  125       | "list" "function" • "id" error formal_parameters ")" $@6

    error  shift, and go to state 174
    "id"   shift, and go to state 175


State 131

  115 header: type "function" • "id" "(" formal_parameters ")"

    "id"  shift, and go to state 176


State 132

  114 subprogram: header body • "end"

    "end"  shift, and go to state 177


State 133

   24 field: "record" fields "endrec" • vars

    "list"  shift, and go to state 74
    "id"    shift, and go to state 75

    vars            go to state 178
    undef_variable  go to state 77


State 134

    4 declarations: declarations "record" fields "endrec" vars •
   12 vars: vars • "," undef_variable

    ","  shift, and go to state 122

    $default  reduce using rule 4 (declarations)


State 135

   31 value: "string const" •

    $default  reduce using rule 31 (value)


State 136

   32 sign: "+ or -" •

    $default  reduce using rule 32 (sign)


State 137

   27 value_list: "/" values • "/"
   28 values: values • "," value

    "/"  shift, and go to state 179
    ","  shift, and go to state 180


State 138

   29 values: value •

    $default  reduce using rule 29 (values)


State 139

   30 value: sign • constant

    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    "("              shift, and go to state 181

    constant          go to state 182
    simple_constant   go to state 183
    complex_constant  go to state 184


State 140

   25 vals: vals "," "id" • value_list

    "/"  shift, and go to state 93

    value_list  go to state 185


State 141

   85 goto_statement: "goto" "id" "," "(" • labels ")"

    "int const"  shift, and go to state 23

    label   go to state 186
    labels  go to state 187


State 142

   93 read_list: read_list "," • read_item
   96 read_item: "(" read_list "," • "id" "=" iter_space ")"

    "id"        shift, and go to state 188
    "listfunc"  shift, and go to state 24
    "("         shift, and go to state 50

    variable   go to state 51
    read_item  go to state 143


State 143

   93 read_list: read_list "," read_item •

    $default  reduce using rule 93 (read_list)


State 144

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   76           | "new" "(" expression • ")"

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115
    ")"                                             shift, and go to state 189


State 145

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   75           | "length" "(" expression • ")"

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115
    ")"                                             shift, and go to state 190


State 146

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   77           | "(" expression • ")"
   78           | "(" expression • ":" expression ")"

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115
    ")"                                             shift, and go to state 147
    ":"                                             shift, and go to state 148


State 147

   77 expression: "(" expression ")" •

    $default  reduce using rule 77 (expression)


State 148

   78 expression: "(" expression ":" • expression ")"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 191
    listexpression   go to state 68


State 149

  100 write_list: write_list "," • write_item
  103 write_item: "(" write_list "," • "id" "=" iter_space ")"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 192
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    "string const"   shift, and go to state 60
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 63
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 67
    listexpression   go to state 68
    write_item       go to state 160


State 150

   83 listexpression: "[" "]" $@2 •

    $default  reduce using rule 83 (listexpression)


State 151

   62 expressions: expressions "," • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 193
    listexpression   go to state 68


State 152

   81 listexpression: "[" expressions "]" • $@1

    $default  reduce using rule 80 ($@1)

    $@1  go to state 194


State 153

   64 expression: expression • ".OR." expression
   64           | expression ".OR." expression •
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression

    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115

    $default  reduce using rule 64 (expression)


State 154

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   65           | expression ".AND." expression •
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression

    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115

    $default  reduce using rule 65 (expression)


State 155

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   66           | expression ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression •
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression

    "+ or -"  shift, and go to state 112
    "*"       shift, and go to state 113
    "/"       shift, and go to state 114
    "**"      shift, and go to state 115

    $default  reduce using rule 66 (expression)


State 156

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   67           | expression "+ or -" expression •
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression

    "*"   shift, and go to state 113
    "/"   shift, and go to state 114
    "**"  shift, and go to state 115

    $default  reduce using rule 67 (expression)


State 157

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   68           | expression "*" expression •
   69           | expression • "/" expression
   70           | expression • "**" expression

    "**"  shift, and go to state 115

    $default  reduce using rule 68 (expression)


State 158

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   69           | expression "/" expression •
   70           | expression • "**" expression

    "**"  shift, and go to state 115

    $default  reduce using rule 69 (expression)


State 159

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   70           | expression "**" expression •

    "**"  shift, and go to state 115

    $default  reduce using rule 70 (expression)


State 160

  100 write_list: write_list "," write_item •

    $default  reduce using rule 100 (write_list)


State 161

   88 if_statement: "if" "(" expression ")" • label "," label "," label
   89             | "if" "(" expression ")" • simple_statement
  107 branch_statement: "if" "(" expression ")" • "then" body tail

    "continue"   shift, and go to state 13
    "goto"       shift, and go to state 14
    "call"       shift, and go to state 15
    "read"       shift, and go to state 16
    "write"      shift, and go to state 17
    "if"         shift, and go to state 195
    "then"       shift, and go to state 196
    "stop"       shift, and go to state 20
    "return"     shift, and go to state 21
    "id"         shift, and go to state 22
    "int const"  shift, and go to state 23
    "listfunc"   shift, and go to state 24

    label             go to state 197
    simple_statement  go to state 198
    assignment        go to state 31
    variable          go to state 32
    goto_statement    go to state 33
    if_statement      go to state 34
    subroutine_call   go to state 35
    io_statement      go to state 36


State 162

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   97 iter_space: expression • "," expression step

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115
    ","                                             shift, and go to state 199


State 163

  111 loop_statement: "do" "id" "=" iter_space • body "enddo" $@3

    $default  reduce using rule 6 (declarations)

    body          go to state 200
    declarations  go to state 3


State 164

   60 variable: "listfunc" "(" expression ")" •

    $default  reduce using rule 60 (variable)


State 165

   20 dim: "id" •

    $default  reduce using rule 20 (dim)


State 166

   19 dim: "int const" •

    $default  reduce using rule 19 (dim)


State 167

   15 undef_variable: "id" "(" dims • ")"
   17 dims: dims • "," dim

    ")"  shift, and go to state 201
    ","  shift, and go to state 202


State 168

   18 dims: dim •

    $default  reduce using rule 18 (dims)


State 169

   12 vars: vars "," undef_variable •

    $default  reduce using rule 12 (vars)


State 170

   59 variable: variable "(" expressions ")" •

    $default  reduce using rule 59 (variable)


State 171

  122 header: error "function" "id" • "(" formal_parameters ")" $@5

    "("  shift, and go to state 203


State 172

  117 header: "subroutine" "id" "(" • formal_parameters ")"

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10

    type               go to state 204
    formal_parameters  go to state 205


State 173

  120 header: "list" error "id" • "(" formal_parameters ")" $@4

    "("  shift, and go to state 206


State 174

  123 header: "list" "function" error • "(" formal_parameters ")"

    "("  shift, and go to state 207


State 175

  116 header: "list" "function" "id" • "(" formal_parameters ")"
  125       | "list" "function" "id" • error formal_parameters ")" $@6

    error  shift, and go to state 208
    "("    shift, and go to state 209


State 176

  115 header: type "function" "id" • "(" formal_parameters ")"

    "("  shift, and go to state 210


State 177

  114 subprogram: header body "end" •

    $default  reduce using rule 114 (subprogram)


State 178

   12 vars: vars • "," undef_variable
   24 field: "record" fields "endrec" vars •

    ","  shift, and go to state 122

    $default  reduce using rule 24 (field)


State 179

   27 value_list: "/" values "/" •

    $default  reduce using rule 27 (value_list)


State 180

   28 values: values "," • value

    "string const"  shift, and go to state 135
    "+ or -"        shift, and go to state 136

    $default  reduce using rule 33 (sign)

    value  go to state 211
    sign   go to state 139


State 181

   40 complex_constant: "(" • "real const" ":" sign "real const" ")"

    "real const"  shift, and go to state 212


State 182

   30 value: sign constant •

    $default  reduce using rule 30 (value)


State 183

   34 constant: simple_constant •

    $default  reduce using rule 34 (constant)


State 184

   35 constant: complex_constant •

    $default  reduce using rule 35 (constant)


State 185

   25 vals: vals "," "id" value_list •

    $default  reduce using rule 25 (vals)


State 186

   87 labels: label •

    $default  reduce using rule 87 (labels)


State 187

   85 goto_statement: "goto" "id" "," "(" labels • ")"
   86 labels: labels • "," label

    ")"  shift, and go to state 213
    ","  shift, and go to state 214


State 188

   61 variable: "id" •
   96 read_item: "(" read_list "," "id" • "=" iter_space ")"

    "="  shift, and go to state 215

    $default  reduce using rule 61 (variable)


State 189

   76 expression: "new" "(" expression ")" •

    $default  reduce using rule 76 (expression)


State 190

   75 expression: "length" "(" expression ")" •

    $default  reduce using rule 75 (expression)


State 191

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   78           | "(" expression ":" expression • ")"

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115
    ")"                                             shift, and go to state 216


State 192

   61 variable: "id" •
  103 write_item: "(" write_list "," "id" • "=" iter_space ")"

    "="  shift, and go to state 217

    $default  reduce using rule 61 (variable)


State 193

   62 expressions: expressions "," expression •
   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115

    $default  reduce using rule 62 (expressions)


State 194

   81 listexpression: "[" expressions "]" $@1 •

    $default  reduce using rule 81 (listexpression)


State 195

   88 if_statement: "if" • "(" expression ")" label "," label "," label
   89             | "if" • "(" expression ")" simple_statement

    "("  shift, and go to state 218


State 196

  107 branch_statement: "if" "(" expression ")" "then" • body tail

    $default  reduce using rule 6 (declarations)

    body          go to state 219
    declarations  go to state 3


State 197

   88 if_statement: "if" "(" expression ")" label • "," label "," label

    ","  shift, and go to state 220


State 198

   89 if_statement: "if" "(" expression ")" simple_statement •

    $default  reduce using rule 89 (if_statement)


State 199

   97 iter_space: expression "," • expression step

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 221
    listexpression   go to state 68


State 200

  111 loop_statement: "do" "id" "=" iter_space body • "enddo" $@3

    "enddo"  shift, and go to state 222


State 201

   15 undef_variable: "id" "(" dims ")" •

    $default  reduce using rule 15 (undef_variable)


State 202

   17 dims: dims "," • dim

    "id"         shift, and go to state 165
    "int const"  shift, and go to state 166

    dim  go to state 223


State 203

  122 header: error "function" "id" "(" • formal_parameters ")" $@5

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10

    type               go to state 204
    formal_parameters  go to state 224


State 204

  126 formal_parameters: type • vars "," formal_parameters
  127                  | type • vars

    "list"  shift, and go to state 74
    "id"    shift, and go to state 75

    vars            go to state 225
    undef_variable  go to state 77


State 205

  117 header: "subroutine" "id" "(" formal_parameters • ")"

    ")"  shift, and go to state 226


State 206

  120 header: "list" error "id" "(" • formal_parameters ")" $@4

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10

    type               go to state 204
    formal_parameters  go to state 227


State 207

  123 header: "list" "function" error "(" • formal_parameters ")"

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10

    type               go to state 204
    formal_parameters  go to state 228


State 208

  125 header: "list" "function" "id" error • formal_parameters ")" $@6

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10

    type               go to state 204
    formal_parameters  go to state 229


State 209

  116 header: "list" "function" "id" "(" • formal_parameters ")"

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10

    type               go to state 204
    formal_parameters  go to state 230


State 210

  115 header: type "function" "id" "(" • formal_parameters ")"

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10

    type               go to state 204
    formal_parameters  go to state 231


State 211

   28 values: values "," value •

    $default  reduce using rule 28 (values)


State 212

   40 complex_constant: "(" "real const" • ":" sign "real const" ")"

    ":"  shift, and go to state 232


State 213

   85 goto_statement: "goto" "id" "," "(" labels ")" •

    $default  reduce using rule 85 (goto_statement)


State 214

   86 labels: labels "," • label

    "int const"  shift, and go to state 23

    label  go to state 233


State 215

   96 read_item: "(" read_list "," "id" "=" • iter_space ")"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 162
    listexpression   go to state 68
    iter_space       go to state 234


State 216

   78 expression: "(" expression ":" expression ")" •

    $default  reduce using rule 78 (expression)


State 217

  103 write_item: "(" write_list "," "id" "=" • iter_space ")"

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 162
    listexpression   go to state 68
    iter_space       go to state 235


State 218

   88 if_statement: "if" "(" • expression ")" label "," label "," label
   89             | "if" "(" • expression ")" simple_statement

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 236
    listexpression   go to state 68


State 219

  107 branch_statement: "if" "(" expression ")" "then" body • tail

    "else"   shift, and go to state 237
    "endif"  shift, and go to state 238

    tail  go to state 239


State 220

   88 if_statement: "if" "(" expression ")" label "," • label "," label

    "int const"  shift, and go to state 23

    label  go to state 240


State 221

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   97 iter_space: expression "," expression • step

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115
    ","                                             shift, and go to state 241

    $default  reduce using rule 99 (step)

    step  go to state 242


State 222

  111 loop_statement: "do" "id" "=" iter_space body "enddo" • $@3

    $default  reduce using rule 110 ($@3)

    $@3  go to state 243


State 223

   17 dims: dims "," dim •

    $default  reduce using rule 17 (dims)


State 224

  122 header: error "function" "id" "(" formal_parameters • ")" $@5

    ")"  shift, and go to state 244


State 225

   12 vars: vars • "," undef_variable
  126 formal_parameters: type vars • "," formal_parameters
  127                  | type vars •

    ","  shift, and go to state 245

    $default  reduce using rule 127 (formal_parameters)


State 226

  117 header: "subroutine" "id" "(" formal_parameters ")" •

    $default  reduce using rule 117 (header)


State 227

  120 header: "list" error "id" "(" formal_parameters • ")" $@4

    ")"  shift, and go to state 246


State 228

  123 header: "list" "function" error "(" formal_parameters • ")"

    ")"  shift, and go to state 247


State 229

  125 header: "list" "function" "id" error formal_parameters • ")" $@6

    ")"  shift, and go to state 248


State 230

  116 header: "list" "function" "id" "(" formal_parameters • ")"

    ")"  shift, and go to state 249


State 231

  115 header: type "function" "id" "(" formal_parameters • ")"

    ")"  shift, and go to state 250


State 232

   40 complex_constant: "(" "real const" ":" • sign "real const" ")"

    "+ or -"  shift, and go to state 136

    $default  reduce using rule 33 (sign)

    sign  go to state 251


State 233

   86 labels: labels "," label •

    $default  reduce using rule 86 (labels)


State 234

   96 read_item: "(" read_list "," "id" "=" iter_space • ")"

    ")"  shift, and go to state 252


State 235

  103 write_item: "(" write_list "," "id" "=" iter_space • ")"

    ")"  shift, and go to state 253


State 236

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   88 if_statement: "if" "(" expression • ")" label "," label "," label
   89             | "if" "(" expression • ")" simple_statement

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115
    ")"                                             shift, and go to state 254


State 237

  108 tail: "else" • body "endif"

    $default  reduce using rule 6 (declarations)

    body          go to state 255
    declarations  go to state 3


State 238

  109 tail: "endif" •

    $default  reduce using rule 109 (tail)


State 239

  107 branch_statement: "if" "(" expression ")" "then" body tail •

    $default  reduce using rule 107 (branch_statement)


State 240

   88 if_statement: "if" "(" expression ")" label "," label • "," label

    ","  shift, and go to state 256


State 241

   98 step: "," • expression

    "new"            shift, and go to state 54
    "length"         shift, and go to state 55
    "id"             shift, and go to state 22
    "int const"      shift, and go to state 56
    "real const"     shift, and go to state 57
    "char const"     shift, and go to state 58
    "logical const"  shift, and go to state 59
    ".NOT."          shift, and go to state 61
    "+ or -"         shift, and go to state 62
    "listfunc"       shift, and go to state 24
    "("              shift, and go to state 101
    "["              shift, and go to state 64

    simple_constant  go to state 65
    variable         go to state 66
    expression       go to state 257
    listexpression   go to state 68


State 242

   97 iter_space: expression "," expression step •

    $default  reduce using rule 97 (iter_space)


State 243

  111 loop_statement: "do" "id" "=" iter_space body "enddo" $@3 •

    $default  reduce using rule 111 (loop_statement)


State 244

  122 header: error "function" "id" "(" formal_parameters ")" • $@5

    $default  reduce using rule 121 ($@5)

    $@5  go to state 258


State 245

   12 vars: vars "," • undef_variable
  126 formal_parameters: type vars "," • formal_parameters

    "int"      shift, and go to state 6
    "real"     shift, and go to state 7
    "logical"  shift, and go to state 8
    "char"     shift, and go to state 9
    "complex"  shift, and go to state 10
    "list"     shift, and go to state 74
    "id"       shift, and go to state 75

    type               go to state 204
    undef_variable     go to state 169
    formal_parameters  go to state 259


State 246

  120 header: "list" error "id" "(" formal_parameters ")" • $@4

    $default  reduce using rule 119 ($@4)

    $@4  go to state 260


State 247

  123 header: "list" "function" error "(" formal_parameters ")" •

    $default  reduce using rule 123 (header)


State 248

  125 header: "list" "function" "id" error formal_parameters ")" • $@6

    $default  reduce using rule 124 ($@6)

    $@6  go to state 261


State 249

  116 header: "list" "function" "id" "(" formal_parameters ")" •

    $default  reduce using rule 116 (header)


State 250

  115 header: type "function" "id" "(" formal_parameters ")" •

    $default  reduce using rule 115 (header)


State 251

   40 complex_constant: "(" "real const" ":" sign • "real const" ")"

    "real const"  shift, and go to state 262


State 252

   96 read_item: "(" read_list "," "id" "=" iter_space ")" •

    $default  reduce using rule 96 (read_item)


State 253

  103 write_item: "(" write_list "," "id" "=" iter_space ")" •

    $default  reduce using rule 103 (write_item)


State 254

   88 if_statement: "if" "(" expression ")" • label "," label "," label
   89             | "if" "(" expression ")" • simple_statement

    "continue"   shift, and go to state 13
    "goto"       shift, and go to state 14
    "call"       shift, and go to state 15
    "read"       shift, and go to state 16
    "write"      shift, and go to state 17
    "if"         shift, and go to state 195
    "stop"       shift, and go to state 20
    "return"     shift, and go to state 21
    "id"         shift, and go to state 22
    "int const"  shift, and go to state 23
    "listfunc"   shift, and go to state 24

    label             go to state 197
    simple_statement  go to state 198
    assignment        go to state 31
    variable          go to state 32
    goto_statement    go to state 33
    if_statement      go to state 34
    subroutine_call   go to state 35
    io_statement      go to state 36


State 255

  108 tail: "else" body • "endif"

    "endif"  shift, and go to state 263


State 256

   88 if_statement: "if" "(" expression ")" label "," label "," • label

    "int const"  shift, and go to state 23

    label  go to state 264


State 257

   64 expression: expression • ".OR." expression
   65           | expression • ".AND." expression
   66           | expression • ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE." expression
   67           | expression • "+ or -" expression
   68           | expression • "*" expression
   69           | expression • "/" expression
   70           | expression • "**" expression
   98 step: "," expression •

    ".OR."                                          shift, and go to state 109
    ".AND."                                         shift, and go to state 110
    ".GT. or .GE. or .LT. or .LE. or .EQ. or .NE."  shift, and go to state 111
    "+ or -"                                        shift, and go to state 112
    "*"                                             shift, and go to state 113
    "/"                                             shift, and go to state 114
    "**"                                            shift, and go to state 115

    $default  reduce using rule 98 (step)


State 258

  122 header: error "function" "id" "(" formal_parameters ")" $@5 •

    $default  reduce using rule 122 (header)


State 259

  126 formal_parameters: type vars "," formal_parameters •

    $default  reduce using rule 126 (formal_parameters)


State 260

  120 header: "list" error "id" "(" formal_parameters ")" $@4 •

    $default  reduce using rule 120 (header)


State 261

  125 header: "list" "function" "id" error formal_parameters ")" $@6 •

    $default  reduce using rule 125 (header)


State 262

   40 complex_constant: "(" "real const" ":" sign "real const" • ")"

    ")"  shift, and go to state 265


State 263

  108 tail: "else" body "endif" •

    $default  reduce using rule 108 (tail)


State 264

   88 if_statement: "if" "(" expression ")" label "," label "," label •

    $default  reduce using rule 88 (if_statement)


State 265

   40 complex_constant: "(" "real const" ":" sign "real const" ")" •

    $default  reduce using rule 40 (complex_constant)
